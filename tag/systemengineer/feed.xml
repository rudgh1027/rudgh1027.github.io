<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/tag/systemengineer/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2019-12-09T18:01:31+09:00</updated>
  <id>/tag/systemengineer/feed.xml</id>

  
  
  

  
    <title type="html">GKArchy | </title>
  

  
    <subtitle>IT Service Technology Blog</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Deploy Dotnet MVC web</title>
      <link href="/dotnetMVCDeploy" rel="alternate" type="text/html" title="Deploy Dotnet MVC web" />
      <published>2019-11-22T19:18:00+09:00</published>
      <updated>2019-11-22T19:18:00+09:00</updated>
      <id>/dotnetMVCDeploy</id>
      <content type="html" xml:base="/dotnetMVCDeploy">&lt;h2 id=&quot;setting-environment&quot;&gt;Setting environment&lt;/h2&gt;
&lt;h3 id=&quot;1-install-dotnet-core-sdk&quot;&gt;1. Install Dotnet core SDK&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://dotnet.microsoft.com/download/linux-package-manager/sdk-current&quot;&gt;https://dotnet.microsoft.com/download/linux-package-manager/sdk-current&lt;/a&gt;
&lt;br /&gt;Find OS Type and version matches your environment.
&lt;br /&gt;In my case, using ubuntu 18.x version&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb

sudo apt-get update
sudo apt-get install apt-transport-https
sudo apt-get update
sudo apt-get install dotnet-sdk-3.0 -y

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;2-pull-dotnet-core-image&quot;&gt;2. Pull dotnet core image&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
docker search dotnet
    ## result
    ## microsoft/dotnet                      Official images for .NET Core and ASP.NET Co…   1446          [OK]
    ## ....
docker pull microsoft/dotnet:latest
    ## result
    ## 9a0b0ce99936: Pull complete
    ## db3b6004c61a: Pull complete
    ## f8f075920295: Pull complete
    ## 6ef14aff1139: Extracting [==================================================&amp;gt;]  50.07MB/50.07MB
    ## c05081985e91: Download complete
    ## 6c5e96b85e8c: Download complete
    ## d39c626fbbd1: Download complete

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;make-dotnet-project&quot;&gt;Make Dotnet Project&lt;/h2&gt;
&lt;h3 id=&quot;1-create-project&quot;&gt;1. create project&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
## make solution file
mkdir test
cd test
dotnet new sln

## make mvc project
mkdir test
cd test
dotnet new mvc

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;2-local-test&quot;&gt;2. Local Test&lt;/h3&gt;
&lt;h4 id=&quot;1-change-listening-port-1&quot;&gt;1) Change Listening port &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn1&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;/h4&gt;
&lt;p&gt;&lt;b&gt;This is just for local test purpose.&lt;/b&gt; It is useless setting After deploying as docker container, because docker automatically configure port fowarding setting.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
cd ~/test/test
vi Program.cs

&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;pre&gt;&lt;code&gt;
public class Program
  {
      public static void Main(string[] args)
      {
          CreateHostBuilder(args).Build().Run();
      }

      public static IHostBuilder CreateHostBuilder(string[] args) =&amp;gt;
          Host.CreateDefaultBuilder(args)
              .ConfigureWebHostDefaults(webBuilder =&amp;gt;
              {
                      webBuilder.UseUrls(&quot;http://*:80;http://*:5000;&quot;)
                      .UseStartup\&amp;lt;Startup\&amp;gt;();
              });
  }

 &lt;/code&gt;&lt;/pre&gt;
  &lt;p&gt;Change the port from 80, 5000 to any number you want&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;2-run-dotnet-project-and-check-connection&quot;&gt;2) Run dotnet project and check connection&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
cd ~/test/test
dotnet run

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you create project on azure or cloud plateform, You should add firewall rule allowing your selected port.&lt;/p&gt;

&lt;p&gt;Type http://(public ip):(your port) on your browser
You can see a dotnet default web page. Press ctl+c on your server machine to exit the web service.&lt;/p&gt;

&lt;h2 id=&quot;deploy-to-docker-2&quot;&gt;Deploy to Docker &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn2&quot; id=&quot;fnref2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;

&lt;h3 id=&quot;3-make-dockerfile&quot;&gt;3. Make Dockerfile&lt;/h3&gt;
&lt;p&gt;type “   vi ~/test/Dockerfile   “&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
FROM mcr.microsoft.com/dotnet/core/sdk:3.0 AS build
WORKDIR /app

## copy csproj and restore as distinct layers
COPY *.sln .
COPY test/*.csproj ./test/
RUN dotnet restore

## copy everything else and build app
COPY test/. ./test/
WORKDIR /app/test
RUN dotnet publish -c Release -o out


FROM mcr.microsoft.com/dotnet/core/aspnet:3.0 AS runtime
WORKDIR /app
COPY --from=build /app/test/out ./
ENTRYPOINT [&quot;dotnet&quot;, &quot;test.dll&quot;]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you want to use another project name, replace “test” to “Your Project Name”. &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn3&quot; id=&quot;fnref3&quot;&gt;[3]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h3 id=&quot;4-run-in-a-linux-container&quot;&gt;4. Run in a Linux container&lt;/h3&gt;
&lt;p&gt;Go to directory that has Dockerfile, Build and Deploy.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
cd ~/test/
## Build dotnet core web by Dockerfile
docker build -t test .

## Run on background
## Port fowarding : Local 5000 port -&amp;gt; container 80 port
## Replace 5000 to another port you want 
docker run -it --rm -p 5000:80 --name test_docker_aspnet test -d

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can connect web page by Public IP address on 5000 port &lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn4&quot; id=&quot;fnref4&quot;&gt;[4]&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;hr class=&quot;footnotes-sep&quot; /&gt;

&lt;section class=&quot;footnotes&quot;&gt;
&lt;ol class=&quot;footnotes-list&quot;&gt;
    &lt;li id=&quot;fn1&quot; class=&quot;footnote-item&quot;&gt;
            reference: &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/web-host?view=aspnetcore-3.0#server-urls&quot;&gt;
                &lt;small&gt;https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/web-host?view=aspnetcore-3.0#server-urls&lt;/small&gt;
            &lt;/a&gt; 
            &lt;a href=&quot;#fnref1&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn2&quot; class=&quot;footnote-item&quot;&gt;
            reference: &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/building-net-docker-images?view=aspnetcore-3.0&quot;&gt;
                &lt;small&gt;https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/building-net-docker-images?view=aspnetcore-3.0&lt;/small&gt;
            &lt;/a&gt; 
            &lt;a href=&quot;#fnref2&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn3&quot; class=&quot;footnote-item&quot;&gt;
            reference: &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/building-net-docker-images?view=aspnetcore-3.0#the-dockerfile-1&quot;&gt;
                &lt;small&gt;https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/building-net-docker-images?view=aspnetcore-3.0#the-dockerfile-1&lt;/small&gt;
            &lt;/a&gt; 
            &lt;a href=&quot;#fnref3&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn4&quot; class=&quot;footnote-item&quot;&gt;
            reference: &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/building-net-docker-images?view=aspnetcore-3.0#run-in-a-linux-container&quot;&gt;
                &lt;small&gt;https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/docker/building-net-docker-images?view=aspnetcore-3.0#run-in-a-linux-container&lt;/small&gt;
            &lt;/a&gt; 
            &lt;a href=&quot;#fnref4&quot; class=&quot;footnote-backref&quot;&gt;↩︎&lt;/a&gt;
    &lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</content>

      
      
      
      
      

      <author>
          <name>gkarchy</name>
        
        
      </author>

      

      
        <category term="devops" />
      
        <category term="systemengineer" />
      

      
        <summary type="html">Setting environment 1. Install Dotnet core SDK https://dotnet.microsoft.com/download/linux-package-manager/sdk-current Find OS Type and version matches your environment. In my case, using ubuntu 18.x version wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb sudo dpkg -i packages-microsoft-prod.deb</summary>
      

      
      
    </entry>
  
</feed>
